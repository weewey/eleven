image: "ruby:2.5"

services:
  - redis:latest
  - postgres:latest

stages:
  - test
  - build
  - deploy_integration

variables:
  HOST: 'localhost'
  PORT: '4567'
  CONTAINER_IMAGE: weewey/eleven:${CI_COMMIT_SHORT_SHA}
  POSTGRES_DB: 'eleven_test'
  POSTGRES_HOST: 'postgres'
  POSTGRES_USER: 'runner'
  POSTGRES_PASSWORD: ''
  POSTGRES_PORT: '5432'
  DB_NAME: $POSTGRES_DB
  DB_HOST: $POSTGRES_HOST
  DB_USER: $POSTGRES_USER
  DB_PASSWORD: $POSTGRES_PASSWORD
  DB_PORT: $POSTGRES_PORT
  REDIS_HOST: 'redis'
  SIDEKIQ_REDIS_URL: redis://$REDIS_HOST:6379/0
  APP_VERSION: '1.0.0'
  APP_TYPE: "rails"
  GKE_CLUSTER_NAME: "eleven-integration"
  GKE_ZONE: "asia-southeast1-a"
  GKE_PROJECT: "eleven-007"

rspec:
  variables:
    RAILS_ENV: "test"
  stage: test
  script:
    - cp -f config/application.template.yml config/application.yml
    - gem install bundler
    - bundle install
    - bundle config build.nokogiri --use-system-libraries
    - bundle exec rake db:drop:all db:create:all db:migrate
    - bundle exec rspec

build:
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  tags:
    - docker
  stage: build
  script:
    - docker build -t ${CONTAINER_IMAGE} .
    - docker tag ${CONTAINER_IMAGE} weewey/eleven:latest
    - docker push "$CI_REGISTRY_IMAGE"

deploy_integration:
  image: devth/helm
  stage: deploy_integration
  before_script:
    - mkdir -p /etc/deploy
    - echo ${GKE_SERVICE_ACCOUNT} > /etc/deploy/sa.json
    - gcloud auth activate-service-account --key-file /etc/deploy/sa.json --project=${GKE_PROJECT}
    - gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_ZONE} --project ${GKE_PROJECT}
    - helm init --client-only
  script:
    - helm upgrade
      --install
      --set image.tag=${CI_COMMIT_SHORT_SHA}
      --wait
      eleven
      ./eleven-chart
  only:
    refs:
      - master